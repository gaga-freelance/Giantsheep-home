/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2018. MIT licensed.
 */
@import url("https://fonts.googleapis.com/css?family=Montserrat:400,700");.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s}body,html{min-height:100vh;overflow:hidden}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.logo{margin:-58px 0 0 -100px;position:absolute;top:50%;left:50%}.toggle-button{position:fixed;width:44px;height:40px;top:35px;right:35px;transition:.25s;z-index:2}.toggle-button:hover{cursor:pointer}.toggle-button .menu-bar{position:absolute;border-radius:2px;width:80%;transition:.5s}.toggle-button .menu-bar-top{border:4px solid #f9dc5c;border-bottom:none;top:0}.toggle-button .menu-bar-middle{height:4px;background-color:#f9dc5c;margin-top:7px;margin-bottom:7px;top:4px}.toggle-button .menu-bar-bottom{border:4px solid #f9dc5c;border-top:none;top:22px}.button-open-transition,.button-open .menu-bar-bottom,.button-open .menu-bar-top{border-color:#f9dc5c;transition:.5s}.button-open .menu-bar-top{transform:rotate(45deg) translate(8px,8px)}.button-open .menu-bar-middle{background-color:#f9dc5c;transform:translate(250px);transition:.1s ease-in;opacity:0}.button-open .menu-bar-bottom{transform:rotate(-45deg) translate(7px,-7px)}.menu-wrap{background-color:#465362;position:absolute;top:0;right:-350px;height:100vh;width:350px;overflow:hidden;z-index:1;transition:.25s}.menu-wrap .social{bottom:15px}.menu-wrap .social,.menu-wrap span{position:absolute;text-align:center;width:100%}.menu-wrap span{color:#011936;font-size:12px;bottom:5px}.menu-show{right:0}.menu{list-style:none;text-align:center;padding-left:0;padding-top:60px}.menu li{display:block;padding-bottom:20px}.menu li a{text-decoration:none;font-size:22px;text-transform:uppercase;font-weight:700;color:#f9dc5c;transition:.3s}.menu li a:hover{opacity:.5}@media only screen and (max-width:45em){.btn-bkg,.menu,.menu-wrap,.toggle-button{display:none}}#about,#contact,#intro,#latest{background-size:cover}#intro{background-image:url(../img/bg1.jpg)}#intro p{color:rgba(70,83,98,.5);margin-top:0}#about{background-image:url(../img/bg2.jpg);padding:6% 0 0}#about p{color:#f9dc5c}#latest{background-image:url(../img/bg3.jpg);padding:6% 0 0}#latest p,#latest p a{color:#465362}#latest p a{text-decoration:none;font-weight:700;transition:.3s}#latest p a:hover{opacity:.5}#latest .btn-bkg{display:block;height:40px;width:45px;background-color:#465362;border-radius:7px;position:absolute;right:39px;top:28px}#contact{background-image:url(../img/bg4.jpg);padding:6% 0 0;color:#f9dc5c}@media only screen and (max-width:33.75em){.img-responsive{display:block;width:80%}}.container{width:50%;padding-left:40px}@media only screen and (min-width:33.75em){.container{width:80%}}@media only screen and (min-width:60em){.container{width:75%;max-width:60rem}}@media only screen and (max-width:33.75em){.container{width:80%}}.row{position:relative;width:100%}.row [class^=col]{float:left;margin:.5rem 2%;min-height:.125rem}.row:after{content:"";display:table;clear:both}.col-1,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-10,.col-11,.col-12{width:96%}.col-1-sm{width:4.33333%}.col-2-sm{width:12.66667%}.col-3-sm{width:21%}.col-4-sm{width:29.33333%}.col-5-sm{width:37.66667%}.col-6-sm{width:46%}.col-7-sm{width:54.33333%}.col-8-sm{width:62.66667%}.col-9-sm{width:71%}.col-10-sm{width:79.33333%}.col-11-sm{width:87.66667%}.col-12-sm{width:96%}@media only screen and (min-width:45em){.col-1{width:4.33333%}.col-2{width:12.66667%}.col-3{width:21%}.col-4{width:29.33333%}.col-5{width:37.66667%}.col-6{width:46%}.col-7{width:54.33333%}.col-8{width:62.66667%}.col-9{width:71%}.col-10{width:79.33333%}.col-11{width:87.66667%}.col-12{width:96%}.hidden-sm{display:block}}form input,form textarea{background:none;border:2px solid #f9dc5c;border-radius:5px;color:#f9dc5c;font-size:16px;padding:10px 15px;display:block;width:80%;margin-bottom:10px}form input::-webkit-input-placeholder,form textarea::-webkit-input-placeholder{opacity:1}form input:-ms-input-placeholder,form textarea:-ms-input-placeholder{opacity:1}form input::placeholder,form textarea::placeholder{opacity:1}form input[type=submit]{font-weight:700;color:#465362;background:#f9dc5c;transition:.3s;cursor:pointer;text-transform:uppercase}form input[type=submit]:hover{opacity:.5}.headline,.lead-img{position:absolute;top:35px;left:40px}.social{list-style:none;padding:0;font-size:22px}.social li{display:inline-block;padding-right:15px}.social li:last-child{padding-right:0}.social li a{color:#f9dc5c;transition:.3s}.social li a:hover{opacity:.5}body{font-family:Montserrat,sans-serif}p{font-size:16px;font-weight:400}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
